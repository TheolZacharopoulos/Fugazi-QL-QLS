/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.uva.student.calinwouter.ql.generated.node;

import org.uva.student.calinwouter.ql.generated.analysis.*;

@SuppressWarnings("nls")
public final class AIfelseStmt extends PStmt
{
    private PExp _exp_;
    private PStmtlist _ifstmts_;
    private PStmtlist _elsestmts_;

    public AIfelseStmt()
    {
        // Constructor
    }

    public AIfelseStmt(
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") PStmtlist _ifstmts_,
        @SuppressWarnings("hiding") PStmtlist _elsestmts_)
    {
        // Constructor
        setExp(_exp_);

        setIfstmts(_ifstmts_);

        setElsestmts(_elsestmts_);

    }

    @Override
    public Object clone()
    {
        return new AIfelseStmt(
            cloneNode(this._exp_),
            cloneNode(this._ifstmts_),
            cloneNode(this._elsestmts_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIfelseStmt(this);
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public PStmtlist getIfstmts()
    {
        return this._ifstmts_;
    }

    public void setIfstmts(PStmtlist node)
    {
        if(this._ifstmts_ != null)
        {
            this._ifstmts_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ifstmts_ = node;
    }

    public PStmtlist getElsestmts()
    {
        return this._elsestmts_;
    }

    public void setElsestmts(PStmtlist node)
    {
        if(this._elsestmts_ != null)
        {
            this._elsestmts_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elsestmts_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exp_)
            + toString(this._ifstmts_)
            + toString(this._elsestmts_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._ifstmts_ == child)
        {
            this._ifstmts_ = null;
            return;
        }

        if(this._elsestmts_ == child)
        {
            this._elsestmts_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._ifstmts_ == oldChild)
        {
            setIfstmts((PStmtlist) newChild);
            return;
        }

        if(this._elsestmts_ == oldChild)
        {
            setElsestmts((PStmtlist) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
