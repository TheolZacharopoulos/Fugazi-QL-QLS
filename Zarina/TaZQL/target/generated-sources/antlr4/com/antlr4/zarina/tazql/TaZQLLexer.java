// Generated from TaZQL.g4 by ANTLR 4.4
package com.antlr4.zarina.tazql;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TaZQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__19=1, T__18=2, T__17=3, T__16=4, T__15=5, T__14=6, T__13=7, T__12=8, 
		T__11=9, T__10=10, T__9=11, T__8=12, T__7=13, T__6=14, T__5=15, T__4=16, 
		T__3=17, T__2=18, T__1=19, T__0=20, TYPE=21, BOOLEAN=22, NUMBER=23, TEXT=24, 
		ID=25, WS=26, SPECIAL=27, NEWLINE=28, COMMENTS=29;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'"
	};
	public static final String[] ruleNames = {
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "TYPE", "BOOLEAN", "NUMBER", "TEXT", "ID", "WS", 
		"SPECIAL", "NEWLINE", "COMMENTS"
	};


	public TaZQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TaZQL.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\37\u00ca\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\3\2\3\2\3\3\3"+
		"\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t"+
		"\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22"+
		"\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\5\26\u0086\n\26\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\5\27\u0091\n\27\3\30\6\30\u0094\n\30\r\30\16"+
		"\30\u0095\3\30\3\30\6\30\u009a\n\30\r\30\16\30\u009b\7\30\u009e\n\30\f"+
		"\30\16\30\u00a1\13\30\3\31\3\31\3\31\3\31\3\31\7\31\u00a8\n\31\f\31\16"+
		"\31\u00ab\13\31\3\31\3\31\3\32\3\32\7\32\u00b1\n\32\f\32\16\32\u00b4\13"+
		"\32\3\33\6\33\u00b7\n\33\r\33\16\33\u00b8\3\33\3\33\3\34\3\34\3\35\5\35"+
		"\u00c0\n\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\2\2\37\3\3\5"+
		"\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37\3\2"+
		"\6\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\b\2##..\60\60<=AA^^\u00d6"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\3=\3\2\2\2\5?\3\2\2\2\7B\3\2\2\2\tE\3\2\2\2\13H\3\2\2\2\rJ\3\2"+
		"\2\2\17L\3\2\2\2\21O\3\2\2\2\23R\3\2\2\2\25X\3\2\2\2\27Z\3\2\2\2\31\\"+
		"\3\2\2\2\33_\3\2\2\2\35d\3\2\2\2\37g\3\2\2\2!l\3\2\2\2#n\3\2\2\2%p\3\2"+
		"\2\2\'r\3\2\2\2)t\3\2\2\2+\u0085\3\2\2\2-\u0090\3\2\2\2/\u0093\3\2\2\2"+
		"\61\u00a2\3\2\2\2\63\u00ae\3\2\2\2\65\u00b6\3\2\2\2\67\u00bc\3\2\2\29"+
		"\u00bf\3\2\2\2;\u00c3\3\2\2\2=>\7\61\2\2>\4\3\2\2\2?@\7#\2\2@A\7?\2\2"+
		"A\6\3\2\2\2BC\7@\2\2CD\7?\2\2D\b\3\2\2\2EF\7~\2\2FG\7~\2\2G\n\3\2\2\2"+
		"HI\7}\2\2I\f\3\2\2\2JK\7>\2\2K\16\3\2\2\2LM\7(\2\2MN\7(\2\2N\20\3\2\2"+
		"\2OP\7?\2\2PQ\7?\2\2Q\22\3\2\2\2RS\7\177\2\2ST\7\"\2\2TU\7G\2\2UV\7P\2"+
		"\2VW\7F\2\2W\24\3\2\2\2XY\7\177\2\2Y\26\3\2\2\2Z[\7@\2\2[\30\3\2\2\2\\"+
		"]\7k\2\2]^\7h\2\2^\32\3\2\2\2_`\7H\2\2`a\7Q\2\2ab\7T\2\2bc\7O\2\2c\34"+
		"\3\2\2\2de\7>\2\2ef\7?\2\2f\36\3\2\2\2gh\7g\2\2hi\7n\2\2ij\7u\2\2jk\7"+
		"g\2\2k \3\2\2\2lm\7*\2\2m\"\3\2\2\2no\7+\2\2o$\3\2\2\2pq\7,\2\2q&\3\2"+
		"\2\2rs\7-\2\2s(\3\2\2\2tu\7/\2\2u*\3\2\2\2vw\7e\2\2wx\7j\2\2xy\7q\2\2"+
		"yz\7k\2\2z{\7e\2\2{\u0086\7g\2\2|}\7f\2\2}~\7k\2\2~\177\7i\2\2\177\u0080"+
		"\7k\2\2\u0080\u0086\7v\2\2\u0081\u0082\7v\2\2\u0082\u0083\7g\2\2\u0083"+
		"\u0084\7z\2\2\u0084\u0086\7v\2\2\u0085v\3\2\2\2\u0085|\3\2\2\2\u0085\u0081"+
		"\3\2\2\2\u0086,\3\2\2\2\u0087\u0088\7v\2\2\u0088\u0089\7t\2\2\u0089\u008a"+
		"\7w\2\2\u008a\u0091\7g\2\2\u008b\u008c\7h\2\2\u008c\u008d\7c\2\2\u008d"+
		"\u008e\7n\2\2\u008e\u008f\7u\2\2\u008f\u0091\7g\2\2\u0090\u0087\3\2\2"+
		"\2\u0090\u008b\3\2\2\2\u0091.\3\2\2\2\u0092\u0094\4\62;\2\u0093\u0092"+
		"\3\2\2\2\u0094\u0095\3\2\2\2\u0095\u0093\3\2\2\2\u0095\u0096\3\2\2\2\u0096"+
		"\u009f\3\2\2\2\u0097\u0099\7\60\2\2\u0098\u009a\4\62;\2\u0099\u0098\3"+
		"\2\2\2\u009a\u009b\3\2\2\2\u009b\u0099\3\2\2\2\u009b\u009c\3\2\2\2\u009c"+
		"\u009e\3\2\2\2\u009d\u0097\3\2\2\2\u009e\u00a1\3\2\2\2\u009f\u009d\3\2"+
		"\2\2\u009f\u00a0\3\2\2\2\u00a0\60\3\2\2\2\u00a1\u009f\3\2\2\2\u00a2\u00a9"+
		"\7]\2\2\u00a3\u00a8\5\63\32\2\u00a4\u00a8\5\67\34\2\u00a5\u00a8\5/\30"+
		"\2\u00a6\u00a8\5\65\33\2\u00a7\u00a3\3\2\2\2\u00a7\u00a4\3\2\2\2\u00a7"+
		"\u00a5\3\2\2\2\u00a7\u00a6\3\2\2\2\u00a8\u00ab\3\2\2\2\u00a9\u00a7\3\2"+
		"\2\2\u00a9\u00aa\3\2\2\2\u00aa\u00ac\3\2\2\2\u00ab\u00a9\3\2\2\2\u00ac"+
		"\u00ad\7_\2\2\u00ad\62\3\2\2\2\u00ae\u00b2\t\2\2\2\u00af\u00b1\t\3\2\2"+
		"\u00b0\u00af\3\2\2\2\u00b1\u00b4\3\2\2\2\u00b2\u00b0\3\2\2\2\u00b2\u00b3"+
		"\3\2\2\2\u00b3\64\3\2\2\2\u00b4\u00b2\3\2\2\2\u00b5\u00b7\t\4\2\2\u00b6"+
		"\u00b5\3\2\2\2\u00b7\u00b8\3\2\2\2\u00b8\u00b6\3\2\2\2\u00b8\u00b9\3\2"+
		"\2\2\u00b9\u00ba\3\2\2\2\u00ba\u00bb\b\33\2\2\u00bb\66\3\2\2\2\u00bc\u00bd"+
		"\t\5\2\2\u00bd8\3\2\2\2\u00be\u00c0\7\17\2\2\u00bf\u00be\3\2\2\2\u00bf"+
		"\u00c0\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00c2\7\f\2\2\u00c2:\3\2\2\2"+
		"\u00c3\u00c4\7\61\2\2\u00c4\u00c5\7\61\2\2\u00c5\u00c6\3\2\2\2\u00c6\u00c7"+
		"\59\35\2\u00c7\u00c8\3\2\2\2\u00c8\u00c9\b\36\2\2\u00c9<\3\2\2\2\r\2\u0085"+
		"\u0090\u0095\u009b\u009f\u00a7\u00a9\u00b2\u00b8\u00bf\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}